@model Sweets.Models.Ingredient

@{
    ViewData["Title"] = "Create";
}

<h1>Create Ingredient</h1>

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="ProductID" class="control-label"></label>
        <select asp-for="ProductID" class="form-control" asp-items="@(ViewBag.Products ?? new SelectList(Enumerable.Empty<SelectListItem>()))" required></select>
        <span asp-validation-for="ProductID" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="RawMaterialID" class="control-label"></label>
        <select asp-for="RawMaterialID" class="form-control" asp-items="ViewBag.RawMaterialID"></select>
        <span asp-validation-for="RawMaterialID" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Quantity" class="control-label"></label>
        <input asp-for="Quantity" class="form-control" type="number" step="0.01" />
        <span asp-validation-for="Quantity" class="text-danger"></span>
    </div>

    <!-- Скрытое поле для передачи ProductID -->
    <input type="hidden" asp-for="ProductID" />

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}