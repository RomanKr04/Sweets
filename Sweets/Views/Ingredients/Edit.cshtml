@model Sweets.Models.Ingredient

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Ingredient</h4>
<hr />

@if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
{
    <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <input type="hidden" asp-for="Id" />

            <div class="form-group">
                <label asp-for="ProductID" class="control-label"></label>
                <select asp-for="ProductID" class="form-control" asp-items="ViewBag.ProductID"></select>
                <span asp-validation-for="ProductID" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="RawMaterialID" class="control-label"></label>
                <select asp-for="RawMaterialID" class="form-control" asp-items="ViewBag.RawMaterialID"></select>
                <span asp-validation-for="RawMaterialID" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" type="number" step="0.01" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
